apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-elasticsearch-logging
  namespace: devops
  labels:
    k8s-app: {{ .Release.Name }}-elasticsearch-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Elasticsearch"
spec:
  ports:
  - port: 9200
    protocol: TCP
    targetPort: db
    name: db
  - port: 9300
    protocol: TCP
    targetPort: transport
    name: transport
  selector:
    k8s-app: {{ .Release.Name }}-elasticsearch-logging
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-elasticsearch-logging
  namespace: devops
  labels:
    k8s-app: {{ .Release.Name }}-elasticsearch-logging
    version: "{{ .Values.elasticsearch.version }}"
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  name: {{ .Release.Name }}-elasticsearch-logging
  replicas: {{ .Values.elasticsearch.replicacount }}
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-elasticsearch-logging
      version: "{{ .Values.elasticsearch.version }}"
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name }}-elasticsearch-logging
        version: "{{ .Values.elasticsearch.version }}"
        kubernetes.io/cluster-service: "true"
    spec:
      serviceAccountName: {{ .Release.Name }}-elasticsearch-logging
      containers:
      - image: "docker.elastic.co/elasticsearch/elasticsearch-oss:{{ .Values.elasticsearch.version }}"
        name: {{ .Release.Name }}-elasticsearch-logging
        resources:
          # need more cpu upon initialization, therefore burstable class
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        ports:
        - containerPort: 9200
          name: db
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: elasticsearch-logging
          mountPath: /data
        env:
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-logging
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
      initContainers:
      - image: alpine:3.6
        command: ["/sbin/sysctl", "-w", "vm.max_map_count=262144"]
        name: elasticsearch-logging-init
        securityContext:
          privileged: true
