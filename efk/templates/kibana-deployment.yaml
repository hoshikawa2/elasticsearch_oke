apiVersion: v1
kind: Service
metadata:
  annotations:
    service.beta.kubernetes.io/oci-load-balancer-shape: 400Mbps
  name: {{ .Release.Name }}-kibana-logging
  namespace: devops
  labels:
    k8s-app: {{ .Release.Name }}-kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
    kubernetes.io/name: "Kibana"
spec:
#  ports:
#  - port: 5601
#    protocol: TCP
#    targetPort: ui
  selector:
    k8s-app: {{ .Release.Name }}-kibana-logging
#  type: LoadBalancer
  ports:
  - port: 5601
    name: http
    targetPort: 5601
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-kibana-logging
  namespace: devops
  labels:
    k8s-app: {{ .Release.Name }}-kibana-logging
    kubernetes.io/cluster-service: "true"
    addonmanager.kubernetes.io/mode: Reconcile
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: {{ .Release.Name }}-kibana-logging
  template:
    metadata:
      labels:
        k8s-app: {{ .Release.Name }}-kibana-logging
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
    spec:
      containers:
      - name: {{ .Release.Name }}-kibana-logging
        image: docker.elastic.co/kibana/kibana-oss:{{ .Values.kibana.version }}
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_URL
            value: http://{{ .Release.Name}}-elasticsearch-logging:9200
        ports:
        - containerPort: 5601
          name: ui
          protocol: TCP
